{% comment %}
    Renders a product card

    Accepts:
    - card_product: {Object} Product Liquid object (optional)
    - show_secondary_image: {Boolean} Show the secondary image on hover. Default: false (optional)
    - extend_height: {Boolean} Card height extends to available container space. Default: true (optional)
    - lazy_load: {Boolean} Image should be lazy loaded. Default: true (optional)

    Usage:
    {% render 'fn-card-product' %}
{% endcomment %}

{{ 'component-rating.css' | asset_url | stylesheet_tag }}
{%- if card_product and card_product != empty -%}
  {%- liquid
    assign ratio = 1
    if card_product.featured_media and media_aspect_ratio == 'portrait'
      assign ratio = 0.8
    elsif card_product.featured_media and media_aspect_ratio == 'adapt'
      assign ratio = card_product.featured_media.aspect_ratio
    endif
    if ratio == 0 or ratio == nil
      assign ratio = 1
    endif
    if limit != blank
      assign limit = limit
    else
      assign limit = 5
    endif
  -%}
<div class="card-wrapper">
  <div class="card fn-pattern-product">
    <div class="medias">
       <div class="swiper-container">
         <div class="swiper-wrapper">
           <div class="swiper-slide">
               <img class="img-first" src="{{ card_product.featured_media | img_url: '385x' }}" alt="{{ card_product.featured_media.alt | escape }}" {% unless lazy_load == false %}loading="lazy"{% endunless %}>
            </div>
           <div class="swiper-slide">
              <img src="{{ card_product.media[1] | img_url: '385x' }}" alt="{{ card_product.media[1].alt | escape }}" loading="lazy">
           </div>
         </div>
         <div class="fn-online-addcart">
             {% render 'fn-pattern-addcart', product: card_product%}
         </div>
         <div class="fn-Pattern-state t fn-Pattern-review" id="state_{{ card_product.id }}">online</div>
             <div class="swiper-button-prev"></div>
             <div class="swiper-button-next"></div>
       </div>
    </div>
    <div class="fn-Progress-head">
        <div class="fn-Progress-title t">
         {{ card_product.title | escape }}
        </div>
         <div class="fn-Progress-producttext">{{ card_product.description }}</div>
          <div class="fn-Progress-prices t">
            {% render 'Progress-price', product: card_product, price_class: '' %}
        </div>
        <div class="fn-Progress-Pollingdata">
            <div class="fn-Progress-rogressbar fn-Pattern-barid" id="bar_{{ card_product.id }}">
              <div class="container fn-content_target">
                  <div class="content_target "></div>
              </div>
              <div class="container">
                  <div class="exceed_expectation"></div>
              </div>
            </div>
        </div>
  </div>
 </div>
</div>
{%- endif -%}
 <script>
    var mySwiper_pattern_a = new Swiper('.fn-pattern-product .swiper-container', {
        navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
       observer:true,//修改swiper自己或子元素时，自动初始化swiper
       observeParents:true//修改swiper的父元素时，自动初始化swiper
    });
</script>